version: '3.8'

services:
  # MongoDB Database (Unified Configuration)
  mongodb:
    image: mongo:7
    container_name: streams-mongodb
    restart: 'no'
    ports:
      - '${MONGO_PORT:-27017}:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-streams_poc}
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
    command: >
      mongod
      --wiredTigerCacheSizeGB 0.25
      --slowms 100
      --profile 1
    networks:
      - streams-network

    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Web API Service (Unified Configuration)
  api:
    build:
      context: ..
      dockerfile: ${DOCKERFILE:-Dockerfile}
    container_name: streams-api
    restart: 'no'
    ports:
      - '${API_PORT:-3000}:3000'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-streams_poc}?authSource=admin
      - MONGODB_DATABASE=${MONGO_DATABASE:-streams_poc}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
    networks:
      - streams-network

networks:
  streams-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
