{
    "name": "mongodb-streams-poc",
    "version": "1.0.0",
    "description": "POC demonstrando processamento eficiente com Streams",
    "main": "src/presentation/cli/index.js",
    "scripts": {
        "// === BUILD COMMANDS ===": "",
        "build": "tsc",
        "build:watch": "tsc --watch",
        "clean": "rm -rf dist node_modules/.cache",
        "// === DEVELOPMENT COMMANDS ===": "",
        "dev:cli": "nodemon --exec ts-node -r tsconfig-paths/register src/presentation/cli/index.ts",
        "dev:api": "nodemon --exec ts-node -r tsconfig-paths/register src/presentation/api/server.ts",
        "start:cli": "ts-node -r tsconfig-paths/register src/presentation/cli/index.ts",
        "start:api": "ts-node -r tsconfig-paths/register src/presentation/api/server.ts",
        "// === ENVIRONMENT MANAGEMENT ===": "",
        "env:start": "docker compose -f docker/docker-compose.yml up -d --build && echo 'ðŸš€ Environment started! API: http://localhost:3000 | Coroot: http://localhost:8080'",
        "env:stop": "docker compose -f docker/docker-compose.yml down",
        "env:restart": "npm run env:stop && npm run env:start",
        "env:destroy": "docker compose -f docker/docker-compose.yml down -v --remove-orphans && docker system prune -f",
        "env:restore": "npm run env:destroy && npm run env:start && sleep 10 && npm run data:seed:quick",
        "env:status": "docker compose -f docker/docker-compose.yml ps",
        "// === DATA MANAGEMENT ===": "",
        "data:status": "ts-node -r tsconfig-paths/register src/presentation/cli/index.ts status",
        "data:clear": "ts-node -r tsconfig-paths/register src/presentation/cli/index.ts clear",
        "data:seed:quick": "TOTAL_DOCUMENTS=10000 ts-node -r tsconfig-paths/register scripts/seed.ts",
        "data:seed:medium": "TOTAL_DOCUMENTS=100000 ts-node -r tsconfig-paths/register scripts/seed.ts",
        "data:seed:large": "TOTAL_DOCUMENTS=1000000 ts-node -r tsconfig-paths/register scripts/seed.ts",
        "// === TESTING & BENCHMARKS ===": "",
        "test:stream": "ts-node -r tsconfig-paths/register src/presentation/cli/index.ts process:stream",
        "test:traditional": "ts-node -r tsconfig-paths/register src/presentation/cli/index.ts process:no-stream",
        "test:compare": "ts-node -r tsconfig-paths/register src/presentation/cli/index.ts compare",
        "benchmark": "ts-node -r tsconfig-paths/register scripts/benchmark.ts",
        "// === MONITORING & LOGS ===": "",
        "logs:all": "docker compose -f docker/docker-compose.yml logs -f",
        "logs:api": "docker compose -f docker/docker-compose.yml logs -f api",
        "logs:db": "docker compose -f docker/docker-compose.yml logs -f mongodb",
        "logs:coroot": "docker compose -f docker/docker-compose.yml logs -f coroot",
        "monitor:open": "echo 'ðŸ“Š Opening Coroot Dashboard...' && open http://localhost:8080 || echo 'Visit: http://localhost:8080'"
    },
    "keywords": [
        "mongodb",
        "streams",
        "clean-architecture",
        "performance"
    ],
    "author": "joaoffnascimento",
    "license": "MIT",
    "dependencies": {
        "@types/cors": "^2.8.19",
        "@types/express": "^5.0.3",
        "chalk": "^4.1.2",
        "cli-table3": "^0.6.3",
        "commander": "^11.1.0",
        "cors": "^2.8.5",
        "dotenv": "^16.3.1",
        "express": "^5.1.0",
        "helmet": "^8.1.0",
        "mongodb": "^6.3.0",
        "ora": "^5.4.1",
        "pino": "^8.16.2",
        "pino-pretty": "^10.2.3",
        "stream-chain": "^2.2.5",
        "stream-json": "^1.8.0",
        "through2": "^4.0.2"
    },
    "devDependencies": {
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.12.0",
        "@types/mongodb": "^4.0.6",
        "@types/node": "^20.19.11",
        "@types/pino": "^7.0.4",
        "jest": "^29.7.0",
        "nodemon": "^3.1.10",
        "ts-node": "^10.9.2",
        "tsconfig-paths": "^4.2.0",
        "typescript": "^5.9.2"
    }
}